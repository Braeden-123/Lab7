@page "/BookManagement"
@inject Lab5.Services.ILibraryService LibraryService

<PageTitle>BookManagement</PageTitle>

<h1>Book Management</h1>


<h4>Add Book</h4>
<div>
    <input @bind="newBookTitle" placeholder="Title" />
    <input @bind="newBookAuthor" placeholder="Author" />
    <input @bind="newBookISBN" placeholder="ISBN" />
    <button @onclick="AddBook">Add Book</button>
</div>

<h4>Available Books</h4>
<table>
    <thead>
        <tr>
            <th>Id</th>
            <th>Title</th>
            <th>Author</th>
            <th>ISBN</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var book in books)
        {
            <tr>
                <td>@book.Id</td>
                @if (editingBookId == book.Id)
                {
                    <td><input @bind="editBookTitle" /></td>
                    <td><input @bind="editBookAuthor" /></td>
                    <td><input @bind="editBookISBN" /></td>
                    <td>
                        <button @onclick="() => UpdateBook(book)">Save</button>
                        <button @onclick="CancelEdit">Cancel</button>
                    </td>
                }
                else
                {
                    <td>@book.Title</td>
                    <td>@book.Author</td>
                    <td>@book.ISBN</td>
                    <td>
                        <button @onclick="() => BeginEditBook(book)">Edit</button>
                        <button @onclick="() => DeleteBook(book.Id)">Delete</button>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

@code {
    private List<Lab5.Models.Book> books = new();
    private string newBookTitle = string.Empty;
    private string newBookAuthor = string.Empty;
    private string newBookISBN = string.Empty;
    private int? editingBookId = null;
    private string editBookTitle = string.Empty;
    private string editBookAuthor = string.Empty;
    private string editBookISBN = string.Empty;
    protected override void OnInitialized()
    {
        LoadBooks();
    }
    private void LoadBooks()
    {
        books = LibraryService.ReadBooks();
    }
    private void AddBook()
    {
        if (!string.IsNullOrWhiteSpace(newBookTitle) &&
            !string.IsNullOrWhiteSpace(newBookAuthor) &&
            !string.IsNullOrWhiteSpace(newBookISBN))
        {
            var book = new Lab5.Models.Book
                {
                    Title = newBookTitle,
                    Author = newBookAuthor,
                    ISBN = newBookISBN
                };

            LibraryService.AddBook(book);
            LoadBooks();
            newBookTitle = newBookAuthor = newBookISBN = string.Empty;
        }
    }
    private void BeginEditBook(Lab5.Models.Book book)
    {
        editingBookId = book.Id;
        editBookTitle = book.Title;
        editBookAuthor = book.Author;
        editBookISBN = book.ISBN;
    }
    private void UpdateBook(Lab5.Models.Book book)
    {
        if (editingBookId == book.Id &&
            !string.IsNullOrWhiteSpace(editBookTitle) &&
            !string.IsNullOrWhiteSpace(editBookAuthor) &&
            !string.IsNullOrWhiteSpace(editBookISBN))
        {
            book.Title = editBookTitle;
            book.Author = editBookAuthor;
            book.ISBN = editBookISBN;
            LibraryService.EditBook(book);
            editingBookId = null;
            LoadBooks();
        }
    }
    private void CancelEdit()
    {
        editingBookId = null;
    }
    private void DeleteBook(int id)
    {
        LibraryService.DeleteBook(id);
        LoadBooks();
    }
}